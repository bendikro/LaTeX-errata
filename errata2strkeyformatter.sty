%%
%% This is file `errata2strkeyformatter.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% errata2.dtx  (with options: `errata2strkeyformatter.sty')
%% 
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{errata2strkeyformatter}[2015/04/06 v1.0 Format a string based on key/value input]
\RequirePackage{xparse}
\RequirePackage{xstring}
\RequirePackage{stringstrings}
\RequirePackage{kvoptions}[2009/07/21]
\SetupKeyvalOptions {
  family = StrKeyFmt,
  prefix = @StrKeyFmtOpt@,
}
\DeclareStringOption[-]{notemptyprefix}
\DeclareStringOption[+]{evenemptyprefix}
\DeclareStringOption[@StrKeyFmt@]{family}
\ProcessKeyvalOptions{StrKeyFmt}
%%
\def\@StrKeyFmt@set{\pgfqkeys{/\@StrKeyFmtOpt@family}}
\def\@StrKeyFmt@setalso{\pgfqkeysalso{/\@StrKeyFmtOpt@family}}
\NewDocumentCommand{\@StrKeyFmt@ifnotempty}{ m m }{\ifthenelse{\equal{#1}{}}{}{#2}}
\NewDocumentCommand{\@StrKeyFmt@isempty}{ m m }{\ifthenelse{\equal{#1}{}}{#2}{}}
%%
\pgfkeysdefnargs{/handlers/.setStrKeyWithDefFmt}{3}{%
  \pgfkeysdefargs{\pgfkeyscurrentpath/.@formatter}{#1}{%
    \pgfkeyssetvalue{\pgfkeysdefaultpath.@formatter/.@formatted}{#3}}%
  \@StrKeyFmt@ifnotempty{#2}{\pgfkeys{\pgfkeyscurrentpath/.@formatter/.default={#2}}}%
}
\pgfkeysdefnargs{/handlers/.setStrKeyFmt}{2}{%
  \pgfqkeys{\pgfkeyscurrentpath}{.setStrKeyWithDefFmt={#1}{}{#2}}%
}
\pgfkeysdefnargs{/handlers/.@StrKeyFmt@setdefaultformat}{4}{%
  \xintFor ##9 in {#4} \do {%
    \@StrKeyFmt@set{#1/##9/.setStrKeyFmt={#2}{{#3}}}% The default formater
  }}
\pgfkeys{%
  /handlers/.also/.code={\pgfkeysalso{#1}},
  /handlers/.ealso/.code={\pgfqkeysalso{\pgfkeyscurrentpath}{.also/.expand once={#1}}},
}
\pgfkeysdefnargs{/handlers/.@StrKeyFmt@getformatted}{4}{%
  \@StrKeyFmt@setvalues[#1]{.@formatter#2={#3}}%
  \pgfkeysgetvalue{/\@StrKeyFmtOpt@family/#1/.@formatter/.@formatted}{#4}%
}
%%
\DeclareExpandableDocumentCommand{\@StrKeyFmt@setvalues}{ O{} m } {\@StrKeyFmt@set{#1/.cd, #2}}
\DeclareExpandableDocumentCommand{\@StrKeyFmt@getvalue}{ m } {\pgfkeysvalueof{\@StrKeyFmtOpt@family/#1}}
\NewDocumentCommand{\SetDefaultKeylistFormat}{ O{#1} m m }{% format, group, keys
  \@StrKeyFmt@set{#2/.@StrKeyFmt@setdefaultformat={#2}{#1}{#1}{#3}}%
}
\NewDocumentCommand{\StrKeyFmtSetKeyFormat}{ O{} m m }{% PGF argument pattern, key, formated output
  \@StrKeyFmt@set{#2/.setStrKeyFmt={#1}{#3}}% Set custom format
}
%%
\NewDocumentCommand{\StrKeyFmtgetformattedef}{ m m m }{% key, args, macroname
  \@StrKeyFmt@set{#1/.@StrKeyFmt@getformatted={#1}{/.expanded}{#2}{#3}}%
}
\NewDocumentCommand{\StrKeyFmtgetformattedee}{ m m m }{% key, args, macroname
  \@StrKeyFmt@set{#1/.@StrKeyFmt@getformatted={#1}{/.expand twice}{#2}{#3}}%
}
\NewDocumentCommand{\StrKeyFmtgetformattedeo}{ m m m }{% key, args, macroname
  \@StrKeyFmt@set{#1/.@StrKeyFmt@getformatted={#1}{/.expand once}{#2}{#3}}%
}
\NewDocumentCommand{\StrKeyFmtgetformatted}{ m m m }{% key, args, macroname
  \@StrKeyFmt@set{#1/.@StrKeyFmt@getformatted={#1}{}{#2}{#3}}%
}
%%
\newcommand\@StrKeyFmt@ifiskey[1]{\ifboolexpr{
    test{\IfBeginWith{#1}{\@StrKeyFmtOpt@evenemptyprefix}}
    or test{\IfBeginWith{#1}{\@StrKeyFmtOpt@notemptyprefix}}}}
%%
\@StrKeyFmt@set{formateroutputt/.initial={}}
%% Arguments:
%% [1]: [optional]macro name to store results
%% [2]: The command parent key for the keys
%% [3]: format group key
%% [4]: Keywords (as comma separated values)
%% [5]: Text containing the keys that define this formatted text to produce
\NewDocumentCommand{\@StrKeyFmt@FormatKeywords}{ O{} m m m m }{% format group key, parent key, formatkey parent , keys/values, format-string
\@StrKeyFmt@set{formateroutputt={}}%
%% Reset arg key values
\xintFor ##1 in {#5} \do {%
  \ifboolexpr{ test {\@StrKeyFmt@ifiskey{##1}} }%
  {\StrGobbleLeft{##1}{1}[\@StrKeyFmt@tmp@right]%
    \pgfkeysifdefined{/\@StrKeyFmtOpt@family/#3/\@StrKeyFmt@tmp@right}{\@StrKeyFmt@set{#3/\@StrKeyFmt@tmp@right={}}}{}%
  }{}% End IfBeginWith
}%
%%
\@StrKeyFmt@ifnotempty{#4}{%
  %% If key/val options, set the values
  \xintFor ##1 in {#4} \do {%
    \@StrKeyFmt@ifnotempty{##1}{\@StrKeyFmt@set{#3/##1}}%
  }}%
%% Process format keys
\xintFor ##9 in {#5} \do {%
  \@StrKeyFmt@ifnotempty{##9}{% Just for safety
    \ifboolexpr{ test {\@StrKeyFmt@ifiskey{##9}} } {% Test if it's a key
      \StrGobbleLeft{##9}{1}[\@StrKeyFmt@tmp@right]%
      \pgfkeysgetvalue{/\@StrKeyFmtOpt@family/#3/\@StrKeyFmt@tmp@right}{\@StrKeyFmt@tmpvalue}%
      %% Fetch the value for the key
      %% If the key is prefixed with \@StrKeyFmtOpt@notemptyprefix, and the value is empty, it's ignored
      \ifboolexpr{ test{\IfBeginWith{##9}{\@StrKeyFmtOpt@evenemptyprefix}}
        or not test{\ifthenelse{\equal{\@StrKeyFmt@tmpvalue}{}}}} {%
        \StrKeyFmtgetformattedeo{#2/\@StrKeyFmt@tmp@right}{\@StrKeyFmt@tmpvalue}{\@StrKeyFmt@tmp@fmtvalue}%
        \@StrKeyFmt@set{formateroutputt/.append/.expand once={\@StrKeyFmt@tmp@fmtvalue}}%
      }{}%
    }{% Not a key
      \@StrKeyFmt@set{formateroutputt/.append={##9}}%
}}}%
\@StrKeyFmt@set{formateroutputt/.get=\@StrKeyFmt@formateroutputt}%
\ifthenelse{\equal{#1}{}}{%
%% Output the result here in the document
\@StrKeyFmt@formateroutputt%
}{%
%% Store the in macro from ARG1
\protected@csxdef{#1}{\expandonce{\@StrKeyFmt@formateroutputt}}%
}}%
\endinput
%%
%% End of file `errata2strkeyformatter.sty'.
